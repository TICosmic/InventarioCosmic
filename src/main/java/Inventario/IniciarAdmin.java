/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Inventario;
import Fuentes.ServiceResponse;
//import Objeto.Usuario;
import com.google.gson.Gson;
import java.awt.AWTException;
import java.awt.Color;
import java.awt.Cursor;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.awt.SystemTray;
import java.awt.TrayIcon;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.net.UnknownHostException;
import javax.swing.ImageIcon;

/**
 *
 * @author Rubén
 */
public class IniciarAdmin extends javax.swing.JFrame {

    Ventana ven;
    ImageIcon icon;
    //Usuario usuario = new Usuario();
    
    
    
    public IniciarAdmin() throws AWTException {
        
        initComponents();
        this.getContentPane().setBackground(new Color(178, 22, 33));
        setLocationRelativeTo(null);
        icon=new ImageIcon(this.getClass().getResource("/adminIco.png"));
        this.setIconImage(icon.getImage());
        this.setTitle("Salir");
        jButton2.setVisible(false);
        
        //plano.segundoPlano();
    }

/** Creates new form IniciarAdmin */
        /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        user = new javax.swing.JTextField();
        login = new javax.swing.JButton();
        pass = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();

        setResizable(false);

        jLabel1.setText("Usuario:");

        jLabel2.setText("Contraseña:");

        login.setText("Salir");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passActionPerformed(evt);
            }
        });

        jButton2.setText("Actualizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pass)
                            .addComponent(user)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addComponent(login)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(login)
                    .addComponent(jButton2))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passActionPerformed

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        // TODO add your handling code here:
        if(user.getText().equals("Administrador")){
            if((String.valueOf(pass.getPassword())).equals("12345")){
                System.exit(0);
            }else{
                JOptionPane.showMessageDialog(null, "Usuario y/o contraseña incorrectos", "Error", JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Usuario y/o contraseña incorrectos", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_loginActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setCursor(new Cursor(3));
        //Actualizaciones
                    
        

                    
        //Version
        File directorio2 = new File(System.getProperty("user.home") + "\\AppData\\Local\\Programs\\Inventario COSMIC\\Temp");
        if (!directorio2.exists()) {
            if (directorio2.mkdirs()) {
                System.out.println("Directorio creado");
            } else {
                System.out.println("Error al crear directorio");
            } 
        }
                    
                    
        try {
            URL ver = new URL("https://github.com/TICosmic/Actualizaciones/raw/main/Update/version.txt");
            URLConnection urlVer = ver.openConnection();
            
            System.out.println(urlVer.getContentType());
                            
            // acceso al contenido web
            InputStream is = urlVer.getInputStream();

            //nombre del archivo destino
            String name2 = "version.txt";
            //Archivo destino con ruta
            File file = new File(directorio2 +"\\"+ name2);

            // Fichero en el que queremos guardar el contenido
            FileOutputStream fos = new FileOutputStream(file);

            // buffer para ir leyendo.
            byte [] array = new byte[9999999];

            // Primera lectura y bucle hasta el final
            int leido = is.read(array);
            while (leido > 0) {
                fos.write(array,0,leido);
                leido=is.read(array);
            }

            
            
            //Lectura del archivo
            
            FileReader fr = new FileReader (file);
            BufferedReader br = new BufferedReader(fr);
            
            String version = br.readLine();
            float verA=Float.valueOf(version);
            
            System.out.println("la versión es: "+verA);
            
            if (verA>2.0) {
                //Destino descarga de actualización
            File directorio = new File(System.getProperty("user.home") + "\\AppData\\Local\\Programs\\Inventario COSMIC");
            if (!directorio.exists()) {
                if (directorio.mkdirs()) {
                    System.out.println("Directorio creado");
                } else {
                    System.out.println("Error al crear directorio");
                } 
            }
                
                System.out.println("Actualización disponible");
                URL url = new URL("https://github.com/TICosmic/Actualizaciones/raw/main/Update/inventario.exe");
                URLConnection urlCon = url.openConnection();
                System.out.println("Descargando");
                System.out.println("Tipo de contenido"+urlCon.getContentType());
                
                 // acceso al contenido web
                InputStream in = urlCon.getInputStream();

                //nombre del archivo destino
                String name = "inventario.exe";
                //Archivo destino con ruta
                File inv = new File(directorio +"\\"+ name);

                // Fichero en el que queremos guardar el contenido
                FileOutputStream out = new FileOutputStream(inv);

                // buffer para ir leyendo.
                byte [] array2 = new byte[9999999];

                // Primera lectura y bucle hasta el final
                int leido2 = in.read(array2);
                while (leido2 > 0) {
                    out.write(array2,0,leido2);
                    leido2=in.read(array2);
                }
                
                // Cierre de conexion y fichero.
                in.close();
                out.close();

                JOptionPane.showMessageDialog(null, "Actualización "+verA+" exitosa, cambios visibles después de reiniciar\n>> URL: " + url+"\n>> Nombre: " + name+"\n>> tamaño: " + urlCon.getContentLength() + " bytes");
                
                
            }else {
                
                JOptionPane.showMessageDialog(null, "No hay actualizaciones disponibles, versión 2.0");
            }
            
            // Cierre de conexion y fichero.
            is.close();
            fos.close();
            
            
            
        } catch (UnknownHostException e) {
            System.out.println("No se pudo conectar " + e.getMessage());
        JOptionPane.showMessageDialog(null, "Revisa tu conexión a internet", "Error", 2);
        } catch (MalformedURLException ex) {
            Logger.getLogger(IniciarAdmin.class.getName()).log(Level.SEVERE, (String)null, ex);
            JOptionPane.showMessageDialog(null, "La url no es válida", "Error", 2);
        } catch (IOException ex) {
            Logger.getLogger(IniciarAdmin.class.getName()).log(Level.SEVERE, (String)null, ex);
            JOptionPane.showMessageDialog(null, "La URL no es válida", "Error", 2);
        }
        
        setCursor(new Cursor(0));
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IniciarAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IniciarAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IniciarAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IniciarAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new IniciarAdmin().setVisible(true);
                } catch (AWTException ex) {
                    Logger.getLogger(IniciarAdmin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton login;
    private javax.swing.JPasswordField pass;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables

}
